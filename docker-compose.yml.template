version: "2.1"

services:

  realip:
    image: dperson/nginx
    network_mode: bridge
    tmpfs:                                                                                   
      - /run                                                                                 
      - /tmp                                                                                 
      - /var/cache/nginx                                                                     
    volumes:
      - /home/pi/pirate-hole/nginx.conf:/etc/nginx/customs        
    command: -I "customs/realip.conf"

  vpn:
    image: ghcr.io/bubuntux/nordvpn:v3.12.3
    network_mode: bridge
    depends_on:
      - realip
    links:
      - realip
    cap_add:
      - NET_ADMIN
      - NET_RAW
      - SYS_MODULE 
    environment:
      - USER=${VPNUSER}
      - "PASS=${VPNPASS}"
      - CONNECT=${VPNSERVER}
      - TECHNOLOGY=NordLynx
    sysctls:
      - net.ipv6.conf.all.disable_ipv6=1
    healthcheck:
      test: ["CMD-SHELL", "if [ $$(curl http://realip/realip/) = $$(curl http://ifconfig.me) ]; then exit 1; else exit 0; fi"]
      interval: 1m30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  radarr:
    network_mode: service:vpn
    image: linuxserver/radarr:${RADARR_BUILD}
    environment:
      - PGID=${GROUPID}
      - PUID=${USERID}
      - TZ=${TZ}
      - UMASK_SET=022
    volumes:
      - ${RADARR_CONFIG}:/config 
      - ${RADARR_DOWNLOADS}:/downloads
      - ${RADARR_MOVIES}:/movies
    depends_on:
      - realip
      - jackett
      - deluge
    healthcheck:
      test: ["CMD-SHELL", "if [ $$(curl http://realip/realip/) = $$(curl http://ifconfig.me) ]; then exit 1; else exit 0; fi"]
      interval: 1m30s
      timeout: 10s
      retries: 3

  sonarr:
    image: linuxserver/sonarr:${SONARR_BUILD}
    network_mode: service:vpn
    environment:
      - PUID=${USERID}
      - PGID=${GROUPID}
      - TZ=${TZ}
      - UMASK_SET=022 #optional
    volumes:
      - ${SONARR_CONFIG}:/config
      - ${SONARR_TV}:/tv
      - ${SONAR_DOWNLOADS}:/downloads
    depends_on:
      - jackett
      - realip
      - deluge 
    healthcheck:
      test: ["CMD-SHELL", "if [ $$(curl http://realip/realip/) = $$(curl http://ifconfig.me) ]; then exit 1; else exit 0; fi"]
      interval: 1m30s
      timeout: 10s
      retries: 3

  jackett:
    network_mode: service:vpn
    image: linuxserver/jackett:${JACKETT_BUILD}
    environment:
      - PGID=${GROUPID}
      - PUID=${USERID}
      - TZ=${TZ}
      - UMASK_SET=022
    volumes:
      - ${JACKETT_CONFIG}:/config
    depends_on:
      - vpn 
      - realip
    healthcheck:
      test: ["CMD-SHELL", "if [ $$(curl http://realip/realip/) = $$(curl http://ifconfig.me) ]; then exit 1; else exit 0; fi"]
      interval: 1m30s
      timeout: 10s
      retries: 3


  deluge:
    network_mode: service:vpn
    image: linuxserver/deluge
    environment:
      - PGID=${GROUPID}
      - PUID=${USERID}
      - TZ=${TZ}
      - UMASK_SET=022
    volumes:
      - ${DELUGE_CONFIG}:/config 
      - ${DELUGE_DOWNLOADS}:/downloads 
    depends_on:
      - vpn 
      - realip
    healthcheck:
      test: ["CMD-SHELL", "if [ $$(curl http://realip/realip/) = $$(curl http://ifconfig.me) ]; then exit 1; else exit 0; fi"]
      interval: 1m30s
      timeout: 10s
      retries: 3

  web:
    image: dperson/nginx
    network_mode: bridge
    links:
      - vpn
    depends_on:                                                                              
      - radarr
      - sonarr
      - jackett
      - deluge        
    tmpfs:                                                                                   
      - /run                                                                                 
      - /tmp                                                                                 
      - /var/cache/nginx                                                                     
    ports:                                                                                   
      - ${WEB_PORT}:80
    volumes:
      - ${BASE_PATH}/nginx.conf:/etc/nginx/customs        
    command: -I "customs/pirate-hole.conf"

  autoheal:
    restart: always
    image: willfarrell/autoheal
    environment:
      - AUTOHEAL_CONTAINER_LABEL=all
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
